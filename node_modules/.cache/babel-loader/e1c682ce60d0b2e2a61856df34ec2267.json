{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Mental-Health-Support/src/containers/auth/EmailPasswordSignUp.jsx\";\nimport React from \"react\";\nimport { Form, Button, Col, Container } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../actions/authActions\";\nimport { useTranslation } from \"react-i18next\";\n\nconst EmailPasswordSignUp = props => {\n  const {\n    t\n  } = useTranslation();\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = React.useState(\"\");\n  const [doesPasswordMatch, setDoesPasswordMatch] = React.useState(true);\n  const {\n    auth,\n    authError,\n    errMessage,\n    errKey\n  } = props; // Redirect to home page after it's signed up and logged in\n\n  if (auth.uid) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  } // Create a new account with \"Email & Password\" method\n\n\n  const handleSubmit = e => {\n    if (password === passwordRepeat) {\n      setDoesPasswordMatch(true);\n      props.signUp({\n        firstName,\n        lastName,\n        fullName: firstName + \" \" + lastName,\n        email,\n        password,\n        imageURL: null\n      });\n    } else {\n      setDoesPasswordMatch(false);\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, t(\"signUpForm.fName\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onInput: e => {\n      setFirstName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, t(\"signUpForm.lName\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onInput: e => {\n      setLastName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, t(\"signUpForm.email\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onInput: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, t(\"signUpForm.password\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    onInput: e => {\n      setPassword(e.target.value);\n      setDoesPasswordMatch(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"passwordRepeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, t(\"signUpForm.rePassword\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    onInput: e => {\n      setPasswordRepeat(e.target.value);\n      setDoesPasswordMatch(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), !doesPasswordMatch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"passwordMatch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, t(\"signUpForm.passNotMatch\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, t(\"signUpForm.signUpButton\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, authError && errKey === \"signup\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsgContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, authError), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, errMessage)))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newProfile => dispatch(signUp(newProfile))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailPasswordSignUp);","map":{"version":3,"sources":["/Users/sushmitamaity/Mental-Health-Support/src/containers/auth/EmailPasswordSignUp.jsx"],"names":["React","Form","Button","Col","Container","Redirect","connect","signUp","useTranslation","EmailPasswordSignUp","props","t","firstName","setFirstName","useState","lastName","setLastName","email","setEmail","password","setPassword","passwordRepeat","setPasswordRepeat","doesPasswordMatch","setDoesPasswordMatch","auth","authError","errMessage","errKey","uid","handleSubmit","e","fullName","imageURL","preventDefault","target","value","mapStateToProps","state","firebase","mapDispatchToProps","dispatch","newProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Col, Container } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../actions/authActions\";\nimport { useTranslation } from \"react-i18next\";\n\nconst EmailPasswordSignUp = (props) => {\n  const { t } = useTranslation();\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = React.useState(\"\");\n  const [doesPasswordMatch, setDoesPasswordMatch] = React.useState(true);\n  const { auth, authError, errMessage, errKey } = props;\n  // Redirect to home page after it's signed up and logged in\n  if (auth.uid) {\n    return <Redirect to=\"/\" />;\n  }\n  // Create a new account with \"Email & Password\" method\n  const handleSubmit = (e) => {\n    if (password === passwordRepeat) {\n      setDoesPasswordMatch(true);\n      props.signUp({\n        firstName,\n        lastName,\n        fullName: firstName + \" \" + lastName,\n        email,\n        password,\n        imageURL: null,\n      });\n    } else {\n      setDoesPasswordMatch(false);\n    }\n    e.preventDefault();\n  };\n  return (\n    <Container>\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"firstName\">\n            <Form.Label>{t(\"signUpForm.fName\")}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onInput={(e) => {\n                setFirstName(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"lastName\">\n            <Form.Label>{t(\"signUpForm.lName\")}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onInput={(e) => {\n                setLastName(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Group controlId=\"email\">\n          <Form.Label>{t(\"signUpForm.email\")}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onInput={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>{t(\"signUpForm.password\")}</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onInput={(e) => {\n              setPassword(e.target.value);\n              setDoesPasswordMatch(true);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"passwordRepeat\">\n          <Form.Label>{t(\"signUpForm.rePassword\")}</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onInput={(e) => {\n              setPasswordRepeat(e.target.value);\n              setDoesPasswordMatch(true);\n            }}\n          />\n        </Form.Group>\n        {!doesPasswordMatch && (\n          <div className=\"passwordMatch\">{t(\"signUpForm.passNotMatch\")}</div>\n        )}\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          {t(\"signUpForm.signUpButton\")}\n        </Button>\n        <Container>\n          {/* Show error message when fails to sign up */}\n          {authError && errKey === \"signup\" && (\n            <div className=\"errMsgContainer\">\n              <b>{authError}</b>\n              <div className=\"errMsg\">{errMessage}</div>\n            </div>\n          )}\n        </Container>\n      </Form>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newProfile) => dispatch(signUp(newProfile)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmailPasswordSignUp);\n"]},"metadata":{},"sourceType":"module"}