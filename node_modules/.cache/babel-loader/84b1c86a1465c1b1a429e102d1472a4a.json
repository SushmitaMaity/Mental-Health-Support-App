{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Mental-Health-Support/src/containers/profile/UpdateEmail.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./AccountSettingsSections.css\";\nimport { updatePasswordAndEmail } from \"../../actions/authActions\";\nimport { Form, Container, Button, Col, Modal } from \"react-bootstrap\";\n\nconst UpdateEmail = props => {\n  const {\n    auth,\n    authError,\n    errMessage,\n    errKey\n  } = props;\n  const [currentEmail, setCurrentEmail] = React.useState(auth.email);\n  const [newEmail, setNewEmail] = React.useState(\"\");\n  const [emailRepeat, setEmailRepeat] = React.useState(\"\");\n  const [confirmModalShow, setConfirmModalShow] = React.useState(false);\n  const [doesEmailMatch, setDoesEmailMatch] = React.useState(true);\n  const [successModalShow, setSuccessModalShow] = React.useState(false);\n\n  const updateEmail = password => {\n    const data = {\n      currentEmail: auth.email,\n      currentPassword: password,\n      newEmail,\n      userId: auth.uid,\n      key: \"updateEmail\"\n    };\n\n    if (newEmail === emailRepeat) {\n      setDoesEmailMatch(true);\n      props.updatePasswordAndEmail(data);\n      setCurrentEmail(newEmail);\n    } else {\n      setDoesEmailMatch(false);\n    }\n  };\n\n  const ConfirmModal = props => {\n    const [password, setPassword] = React.useState(\"\");\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Updating your email\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Enter your password to confirm\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onInput: e => {\n        setPassword(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        props.onHide();\n        updateEmail(password);\n        setSuccessModalShow(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Update Email\")));\n  };\n\n  const SuccessModal = props => {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Updating your email\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, authError && errKey === \"updateEmail\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errMsgContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, authError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, errMessage)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Your email has been updated successfully\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Done\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"updateEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"editingTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Your email address is \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }\n  }, authError ? auth.email : currentEmail)), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"New Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"example@gmail.com\",\n    onInput: e => {\n      setNewEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Confirm New Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Re-type your new email\",\n    onInput: e => {\n      setEmailRepeat(e.target.value);\n      setDoesEmailMatch(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, !doesEmailMatch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emailMatch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Your emails must match\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, authError && errKey === \"updateEmail\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsgContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, authError), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, errMessage)))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setConfirmModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"Update Email\"), /*#__PURE__*/React.createElement(ConfirmModal, {\n    show: confirmModalShow,\n    onHide: () => setConfirmModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SuccessModal, {\n    show: successModalShow,\n    onHide: () => setSuccessModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatePasswordAndEmail: data => dispatch(updatePasswordAndEmail(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmail);","map":{"version":3,"sources":["/Users/sushmitamaity/Mental-Health-Support/src/containers/profile/UpdateEmail.jsx"],"names":["React","connect","updatePasswordAndEmail","Form","Container","Button","Col","Modal","UpdateEmail","props","auth","authError","errMessage","errKey","currentEmail","setCurrentEmail","useState","email","newEmail","setNewEmail","emailRepeat","setEmailRepeat","confirmModalShow","setConfirmModalShow","doesEmailMatch","setDoesEmailMatch","successModalShow","setSuccessModalShow","updateEmail","password","data","currentPassword","userId","uid","key","ConfirmModal","setPassword","e","target","value","onHide","SuccessModal","mapStateToProps","state","firebase","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./AccountSettingsSections.css\";\nimport { updatePasswordAndEmail } from \"../../actions/authActions\";\nimport { Form, Container, Button, Col, Modal } from \"react-bootstrap\";\n\nconst UpdateEmail = (props) => {\n  const { auth, authError, errMessage, errKey } = props;\n\n  const [currentEmail, setCurrentEmail] = React.useState(auth.email);\n  const [newEmail, setNewEmail] = React.useState(\"\");\n  const [emailRepeat, setEmailRepeat] = React.useState(\"\");\n  const [confirmModalShow, setConfirmModalShow] = React.useState(false);\n  const [doesEmailMatch, setDoesEmailMatch] = React.useState(true);\n  const [successModalShow, setSuccessModalShow] = React.useState(false);\n\n  const updateEmail = (password) => {\n    const data = {\n      currentEmail: auth.email,\n      currentPassword: password,\n      newEmail,\n      userId: auth.uid,\n      key: \"updateEmail\",\n    };\n    if (newEmail === emailRepeat) {\n      setDoesEmailMatch(true);\n      props.updatePasswordAndEmail(data);\n      setCurrentEmail(newEmail);\n    } else {\n      setDoesEmailMatch(false);\n    }\n  };\n\n  const ConfirmModal = (props) => {\n    const [password, setPassword] = React.useState(\"\");\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Updating your email\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6>Enter your password to confirm</h6>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onInput={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={props.onHide}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              props.onHide();\n              updateEmail(password);\n              setSuccessModalShow(true);\n            }}\n          >\n            Update Email\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const SuccessModal = (props) => {\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Updating your email\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {authError && errKey === \"updateEmail\" ? (\n            <div className=\"errMsgContainer\">\n              <b>{authError}</b>\n              <div className=\"errMsg\">{errMessage}</div>\n            </div>\n          ) : (\n            <p>Your email has been updated successfully</p>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"success\" onClick={props.onHide}>\n            Done\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  return (\n    <div className=\"updateEmail\">\n      <h4 className=\"editingTitle\">Email address</h4>\n      <p>\n        Your email address is <b>{authError ? auth.email : currentEmail}</b>\n      </p>\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"email\">\n            <Form.Label>New Email Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"example@gmail.com\"\n              onInput={(e) => {\n                setNewEmail(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"email\">\n            <Form.Label>Confirm New Email</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Re-type your new email\"\n              onInput={(e) => {\n                setEmailRepeat(e.target.value);\n                setDoesEmailMatch(true);\n              }}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          {!doesEmailMatch && (\n            <div className=\"emailMatch\">Your emails must match</div>\n          )}\n        </Form.Row>\n        <Container>\n          {/* Show error message when fails to sign up */}\n          {authError && errKey === \"updateEmail\" && (\n            <div className=\"errMsgContainer\">\n              <b>{authError}</b>\n              <div className=\"errMsg\">{errMessage}</div>\n            </div>\n          )}\n        </Container>\n      </Form>\n\n      <Button variant=\"primary\" onClick={() => setConfirmModalShow(true)}>\n        Update Email\n      </Button>\n\n      <ConfirmModal\n        show={confirmModalShow}\n        onHide={() => setConfirmModalShow(false)}\n      />\n\n      <SuccessModal\n        show={successModalShow}\n        onHide={() => setSuccessModalShow(false)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePasswordAndEmail: (data) => dispatch(updatePasswordAndEmail(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEmail);\n"]},"metadata":{},"sourceType":"module"}