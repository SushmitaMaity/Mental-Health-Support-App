{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/index.js\";\nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./i18n\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport firebase from \"firebase/app\";\nimport { Container } from \"react-bootstrap\";\nimport BubblePreloader from \"react-bubble-preloader\";\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, firebaseConfig))); // Construct required properties for rrf\n\nconst profileSpecificProps = { ...firebaseConfig,\n  userProfile: \"profiles\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nconst AuthIsLoaded = ({\n  children\n}) => {\n  const auth = useSelector(state => state.firebase.auth);\n\n  if (!isLoaded(auth)) {\n    // Wait until the auth is done\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BubblePreloader, {\n      animation: {\n        speed: 1\n      },\n      bubble: {\n        width: \"1.5rem\",\n        height: \"1.5rem\"\n      },\n      colors: [\"#AEC6DF\", \"#2580e8\", \"#0E5AA7\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return children;\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(BubblePreloader, {\n    animation: {\n      speed: 1\n    },\n    bubble: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    },\n    colors: [\"#AEC6DF\", \"#2580e8\", \"#0E5AA7\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 13\n  }\n})))))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/index.js"],"names":["React","Suspense","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","useSelector","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","isLoaded","firebaseConfig","firebase","Container","BubblePreloader","store","withExtraArgument","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","speed","width","height","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./i18n\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {     \n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport firebase from \"firebase/app\";\nimport { Container } from \"react-bootstrap\";\nimport BubblePreloader from \"react-bubble-preloader\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, firebaseConfig)\n  )\n);\n\n// Construct required properties for rrf\nconst profileSpecificProps = {\n  ...firebaseConfig,\n  userProfile: \"profiles\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst rrfProps = {\n  firebase,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) {\n    // Wait until the auth is done\n    return (\n      <Container>\n        {/* <h4>Loading...</h4> */}\n        <BubblePreloader\n          animation={{ speed: 1 }}\n          bubble={{ width: \"1.5rem\", height: \"1.5rem\" }}\n          colors={[\"#AEC6DF\", \"#2580e8\", \"#0E5AA7\"]}\n        />\n      </Container>\n    );\n  }\n  return children;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          {/* Wait until the translation is done */}\n          <Suspense\n            fallback={\n              <BubblePreloader\n                animation={{ speed: 1 }}\n                bubble={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                colors={[\"#AEC6DF\", \"#2580e8\", \"#0E5AA7\"]}\n              />\n            }\n          >\n            <App />\n          </Suspense>\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}