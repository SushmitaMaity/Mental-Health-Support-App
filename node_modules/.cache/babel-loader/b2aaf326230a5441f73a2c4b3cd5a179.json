{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Mental-Health-Support/src/containers/profile/ProfileBox.jsx\";\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { updateProfile } from \"../../actions/authActions\";\nimport { Dropdown, Button, Row, Col, ListGroup, Image } from \"react-bootstrap\";\nimport \"./ProfileBox.css\";\nimport anonymousImage from \"../../images/anonymousImage.png\";\n\nconst ProfileBox = props => {\n  const {\n    profile,\n    auth\n  } = props;\n  const photoSrc = profile.imageURL ? profile.imageURL : anonymousImage;\n\n  const handleBlockAndActivateButton = () => {\n    if (!profile.isBlocked) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        className: \"w-75\",\n        onClick: () => props.updateProfile({\n          userId: profile.id,\n          isBlocked: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, \"Block\");\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        className: \"w-75\",\n        onClick: () => props.updateProfile({\n          userId: profile.id,\n          isBlocked: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Activate\");\n    }\n  };\n\n  if (!auth.uid) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles/\" + profile.id,\n    key: profile.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    defaultActiveKey: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    action: true,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: photoSrc,\n    alt: \"Profile\",\n    roundedCircle: true,\n    width: \"100\",\n    height: \"100\",\n    className: \"mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profileBoxInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, profile.fullName), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, profile.jobTitle ? profile.jobTitle : \"No job title available\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, profile.userType)))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 4,\n    className: \"d-flex flex-column pt-2 pb-2 justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, handleBlockAndActivateButton(), /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"info\",\n    id: \"dropdown-basic\",\n    className: \"w-75 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Change account type\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: () => props.updateProfile({\n      userId: profile.id,\n      userType: \"ADMIN\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Admin\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: () => props.updateProfile({\n      userId: profile.id,\n      userType: \"AUTHOR\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: () => props.updateProfile({\n      userId: profile.id,\n      userType: \"SUBSCRIBER\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Subscriber\"))))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProfile: profileInfo => dispatch(updateProfile(profileInfo))\n  };\n};\n\nexport default compose(connect(null, mapDispatchToProps), firestoreConnect([{\n  collection: \"profiles\"\n}]))(ProfileBox);","map":{"version":3,"sources":["/Users/sushmitamaity/Mental-Health-Support/src/containers/profile/ProfileBox.jsx"],"names":["React","Link","Redirect","connect","firestoreConnect","compose","updateProfile","Dropdown","Button","Row","Col","ListGroup","Image","anonymousImage","ProfileBox","props","profile","auth","photoSrc","imageURL","handleBlockAndActivateButton","isBlocked","userId","id","uid","fullName","jobTitle","userType","mapDispatchToProps","dispatch","profileInfo","collection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { updateProfile } from \"../../actions/authActions\";\nimport { Dropdown, Button, Row, Col, ListGroup, Image } from \"react-bootstrap\";\nimport \"./ProfileBox.css\";\nimport anonymousImage from \"../../images/anonymousImage.png\";\n\nconst ProfileBox = (props) => {\n  const { profile, auth } = props;\n  const photoSrc = profile.imageURL ? profile.imageURL : anonymousImage;\n\n  const handleBlockAndActivateButton = () => {\n    if (!profile.isBlocked) {\n      return (\n        <Button\n          variant=\"danger\"\n          className=\"w-75\"\n          onClick={() =>\n            props.updateProfile({ userId: profile.id, isBlocked: true })\n          }\n        >\n          Block\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          variant=\"primary\"\n          className=\"w-75\"\n          onClick={() =>\n            props.updateProfile({ userId: profile.id, isBlocked: false })\n          }\n        >\n          Activate\n        </Button>\n      );\n    }\n  };\n\n  if (!auth.uid) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"profileBox\">\n      <Row>\n        <Col xs={8}>\n          <Link to={\"/profiles/\" + profile.id} key={profile.id}>\n            <ListGroup defaultActiveKey=\"none\">\n              <ListGroup.Item action className=\"d-flex\">\n                <Image\n                  src={photoSrc}\n                  alt=\"Profile\"\n                  roundedCircle\n                  width=\"100\"\n                  height=\"100\"\n                  className=\"mr-5\"\n                />\n                <div class=\"profileBoxInfo\">\n                  <h4>{profile.fullName}</h4>\n                  <h6>\n                    {profile.jobTitle\n                      ? profile.jobTitle\n                      : \"No job title available\"}\n                  </h6>\n                  <h5>{profile.userType}</h5>\n                </div>\n              </ListGroup.Item>\n            </ListGroup>\n          </Link>\n        </Col>\n        <Col\n          xs={4}\n          className=\"d-flex flex-column pt-2 pb-2 justify-content-around\"\n        >\n          {handleBlockAndActivateButton()}\n          <Dropdown>\n            <Dropdown.Toggle\n              variant=\"info\"\n              id=\"dropdown-basic\"\n              className=\"w-75 mt-2\"\n            >\n              Change account type\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() =>\n                  props.updateProfile({ userId: profile.id, userType: \"ADMIN\" })\n                }\n              >\n                Admin\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  props.updateProfile({\n                    userId: profile.id,\n                    userType: \"AUTHOR\",\n                  })\n                }\n              >\n                Author\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  props.updateProfile({\n                    userId: profile.id,\n                    userType: \"SUBSCRIBER\",\n                  })\n                }\n              >\n                Subscriber\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateProfile: (profileInfo) => dispatch(updateProfile(profileInfo)),\n  };\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n  firestoreConnect([{ collection: \"profiles\" }])\n)(ProfileBox);\n"]},"metadata":{},"sourceType":"module"}