{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/PsychoAssess/sections/Questions.jsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row, Button, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\nconst OPTION_QUANTITY = 4;\nconst QUESTION_QUANTITY = 13;\nconst Scores = {\n  VERY_SEVERE: 52,\n  SEVERE: 25,\n  MODERATE: 18,\n  MILD: 13,\n  LIGHT: 7,\n  ANSWERS_MISSING: -15\n};\nexport default function Questions() {\n  const [submitModalShow, setSubmitModalShow] = React.useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const SubmitModal = props => {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, t(\"assessment.title\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, showResults(calculateScore())), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"testContactButton\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, t(\"assessment.contactButton\"))), /*#__PURE__*/React.createElement(Button, {\n      className: \"testDoneButton\",\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, t(\"assessment.closeButton\"))));\n  };\n\n  const showResults = score => {\n    if (score !== Scores.ANSWERS_MISSING) {\n      if (score >= Scores.VERY_SEVERE) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"resultCategory\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, t(\"assessment.verySevere.2\")), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, t(\"assessment.verySevere.0\")), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, t(\"assessment.submitSuccess\")), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }, t(\"assessment.verySevere.1\")));\n      } else if (score >= Scores.SEVERE) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"resultCategory\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, t(\"assessment.severe.2\")), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, t(\"assessment.severe.0\")), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, t(\"assessment.submitSuccess\")), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, t(\"assessment.severe.1\")), /*#__PURE__*/React.createElement(Link, {\n          to: \"/contact\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"testSubmitButton\",\n          variant: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, t(\"assessment.contactButton\"))));\n      } else if (score >= Scores.MODERATE) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"resultCategory\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }, t(\"assessment.moderate.2\")), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, t(\"assessment.moderate.0\")), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, t(\"assessment.submitSuccess\")), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, t(\"assessment.moderate.1\")));\n      } else if (score >= Scores.MILD) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"resultCategory\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, t(\"assessment.mild.2\")), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        }, t(\"assessment.mild.0\")), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        }, t(\"assessment.submitSuccess\")), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, t(\"assessment.mild.1\")));\n      } else if (score >= Scores.LIGHT) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"resultCategory\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, t(\"assessment.light.2\")), /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, t(\"assessment.light.0\")), /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }, t(\"assessment.submitSuccess\")), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }\n        }, t(\"assessment.light.1\")));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    }, t(\"assessment.answerMissing\"));\n  };\n\n  let userScore = 0;\n\n  const calculateScore = () => {\n    const radioButtons = document.getElementsByClassName(\"testChoice\");\n    let checkedRadioNumber = 0;\n\n    for (let i = 0; i < radioButtons.length; i++) {\n      if (radioButtons.item(i).checked) {\n        userScore += parseInt(radioButtons.item(i).value);\n        checkedRadioNumber++;\n      }\n    }\n\n    if (checkedRadioNumber === QUESTION_QUANTITY) {\n      return userScore;\n    }\n\n    return Scores.ANSWERS_MISSING;\n  };\n\n  let questionCount = 0;\n\n  const renderQuestions = () => {\n    const questions = [];\n\n    for (let j = 0; j < QUESTION_QUANTITY; j++) {\n      questions.push( /*#__PURE__*/React.createElement(Row, {\n        key: `question${questionCount}`,\n        className: \"questionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"questionTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, t(`questions.${j}.title`))), /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        lg: 12,\n        className: \"questionAnswers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, renderQuestionAnswers()))));\n      questionCount++;\n    }\n\n    return questions;\n  };\n\n  const renderQuestionAnswers = () => {\n    const options = [];\n\n    for (let i = 0; i < OPTION_QUANTITY; i++) {\n      options.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: `question${questionCount}.${i}`,\n        className: \"form-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input testChoice\",\n        type: \"radio\",\n        name: `question${questionCount}`,\n        value: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"exampleRadios1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, t(`questions.${questionCount}.multiple.${i}`))));\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    className: \"assessContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessExplanation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, t(\"assessExplanation.0\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, t(\"assessExplanation.1\"))), renderQuestions(), /*#__PURE__*/React.createElement(Row, {\n    className: \"testSubmitButtonRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"testSubmitButton\",\n    onClick: () => {\n      setSubmitModalShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(SubmitModal, {\n    show: submitModalShow,\n    onHide: () => setSubmitModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/PsychoAssess/sections/Questions.jsx"],"names":["React","useTranslation","Col","Row","Button","Modal","Link","OPTION_QUANTITY","QUESTION_QUANTITY","Scores","VERY_SEVERE","SEVERE","MODERATE","MILD","LIGHT","ANSWERS_MISSING","Questions","submitModalShow","setSubmitModalShow","useState","t","SubmitModal","props","showResults","calculateScore","onHide","score","userScore","radioButtons","document","getElementsByClassName","checkedRadioNumber","i","length","item","checked","parseInt","value","questionCount","renderQuestions","questions","j","push","renderQuestionAnswers","options"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row, Button, Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nconst OPTION_QUANTITY = 4;\nconst QUESTION_QUANTITY = 13;\nconst Scores = {\n  VERY_SEVERE: 52,\n  SEVERE: 25,\n  MODERATE: 18,\n  MILD: 13,\n  LIGHT: 7,\n  ANSWERS_MISSING: -15,\n};\n\nexport default function Questions() {\n  const [submitModalShow, setSubmitModalShow] = React.useState(false);\n  const { t } = useTranslation();\n\n  const SubmitModal = (props) => {\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {t(\"assessment.title\")}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{showResults(calculateScore())}</Modal.Body>\n        <Modal.Footer>\n          <Link to=\"/contact\">\n            <Button className=\"testContactButton\" variant=\"primary\">\n              {t(\"assessment.contactButton\")}\n            </Button>\n          </Link>\n          <Button className=\"testDoneButton\" onClick={props.onHide}>\n            {t(\"assessment.closeButton\")}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const showResults = (score) => {\n    if (score !== Scores.ANSWERS_MISSING) {\n      if (score >= Scores.VERY_SEVERE) {\n        return (\n          <>\n            <span className=\"resultCategory\">\n              {t(\"assessment.verySevere.2\")}\n            </span>\n            <h3>{t(\"assessment.verySevere.0\")}</h3>\n            <h6>{t(\"assessment.submitSuccess\")}</h6>\n            <h4>{t(\"assessment.verySevere.1\")}</h4>\n          </>\n        );\n      } else if (score >= Scores.SEVERE) {\n        return (\n          <>\n            <span className=\"resultCategory\">{t(\"assessment.severe.2\")}</span>\n            <h5>{t(\"assessment.severe.0\")}</h5>\n            <h6>{t(\"assessment.submitSuccess\")}</h6>\n            <p>{t(\"assessment.severe.1\")}</p>\n            <Link to=\"/contact\">\n              <Button className=\"testSubmitButton\" variant=\"primary\">\n                {t(\"assessment.contactButton\")}\n              </Button>\n            </Link>\n          </>\n        );\n      } else if (score >= Scores.MODERATE) {\n        return (\n          <>\n            <span className=\"resultCategory\">{t(\"assessment.moderate.2\")}</span>\n            <h5>{t(\"assessment.moderate.0\")}</h5>\n            <h6>{t(\"assessment.submitSuccess\")}</h6>\n            <p>{t(\"assessment.moderate.1\")}</p>\n          </>\n        );\n      } else if (score >= Scores.MILD) {\n        return (\n          <>\n            <span className=\"resultCategory\">{t(\"assessment.mild.2\")}</span>\n            <h5>{t(\"assessment.mild.0\")}</h5>\n            <h6>{t(\"assessment.submitSuccess\")}</h6>\n            <p>{t(\"assessment.mild.1\")}</p>\n          </>\n        );\n      } else if (score >= Scores.LIGHT) {\n        return (\n          <>\n            <span className=\"resultCategory\">{t(\"assessment.light.2\")}</span>\n            <h5>{t(\"assessment.light.0\")}</h5>\n            <h6>{t(\"assessment.submitSuccess\")}</h6>\n            <p>{t(\"assessment.light.1\")}</p>\n          </>\n        );\n      }\n    }\n    return <h5>{t(\"assessment.answerMissing\")}</h5>;\n  };\n\n  let userScore = 0;\n  const calculateScore = () => {\n    const radioButtons = document.getElementsByClassName(\"testChoice\");\n    let checkedRadioNumber = 0;\n    for (let i = 0; i < radioButtons.length; i++) {\n      if (radioButtons.item(i).checked) {\n        userScore += parseInt(radioButtons.item(i).value);\n        checkedRadioNumber++;\n      }\n    }\n    if (checkedRadioNumber === QUESTION_QUANTITY) {\n      return userScore;\n    }\n    return Scores.ANSWERS_MISSING;\n  };\n\n  let questionCount = 0;\n  const renderQuestions = () => {\n    const questions = [];\n    for (let j = 0; j < QUESTION_QUANTITY; j++) {\n      questions.push(\n        <Row key={`question${questionCount}`} className=\"questionContainer\">\n          <Col xs={12} md={12} lg={12}>\n            <h3 className=\"questionTitle\">{t(`questions.${j}.title`)}</h3>\n          </Col>\n          <Col xs={12} md={12} lg={12} className=\"questionAnswers\">\n            <ul>{renderQuestionAnswers()}</ul>\n          </Col>\n        </Row>\n      );\n      questionCount++;\n    }\n    return questions;\n  };\n\n  const renderQuestionAnswers = () => {\n    const options = [];\n    for (let i = 0; i < OPTION_QUANTITY; i++) {\n      options.push(\n        <li key={`question${questionCount}.${i}`} className=\"form-check\">\n          <input\n            className=\"form-check-input testChoice\"\n            type=\"radio\"\n            name={`question${questionCount}`}\n            value={`${i}`}\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\n            {t(`questions.${questionCount}.multiple.${i}`)}\n          </label>\n        </li>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <>\n      <Col className=\"assessContainer\">\n        <div className=\"assessExplanation\">\n          <p>{t(\"assessExplanation.0\")}</p>\n          <p>{t(\"assessExplanation.1\")}</p>\n        </div>\n        {renderQuestions()}\n        <Row className=\"testSubmitButtonRow\">\n          <Button\n            variant=\"primary\"\n            className=\"testSubmitButton\"\n            onClick={() => {\n              setSubmitModalShow(true);\n            }}\n          >\n            Submit\n          </Button>\n        </Row>\n        <SubmitModal\n          show={submitModalShow}\n          onHide={() => setSubmitModalShow(false)}\n        />\n      </Col>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}