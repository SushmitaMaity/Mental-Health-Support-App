{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/profile/ManageBlogs.jsx\";\nimport React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport BlogEditor from \"../BlogEditor/BlogEditor\";\nimport BlogBox from \"./BlogBox\";\nimport { approveBlog, deleteBlogFromStorage, deleteBlogFromDB } from \"../../actions/blogActions\";\nimport { ADMIN_ROLE, AUTHOR_ROLE } from \"../../components/common/roleConstants\";\n\nconst ManageBlogs = props => {\n  const {\n    allBlogs,\n    currentUserBlogs,\n    profile\n  } = props;\n  const [newBlog, setNewBlog] = React.useState(null);\n\n  const closeBlogEditor = () => {\n    setNewBlog(null);\n  };\n\n  if (allBlogs && profile) {\n    return /*#__PURE__*/React.createElement(ListGroup, {\n      defaultActiveKey: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, profile.userType === AUTHOR_ROLE && /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      className: \"mb-5\",\n      onClick: () => setNewBlog( /*#__PURE__*/React.createElement(BlogEditor, {\n        closeBlogEditor: closeBlogEditor,\n        profile: profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Add a new blog\"), newBlog, profile.userType === AUTHOR_ROLE && !newBlog && currentUserBlogs.map(blog => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(BlogBox, {\n        approveBlog: props.approveBlog,\n        blog: blog,\n        userType: profile.userType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }), profile.userType === ADMIN_ROLE && !newBlog && allBlogs.map(blog => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(BlogBox, {\n        approveBlog: props.approveBlog,\n        deleteBlogFromStorage: props.deleteBlogFromStorage,\n        deleteBlogFromDB: props.deleteBlogFromDB,\n        blog: blog,\n        userType: profile.userType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }));\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    userId\n  } = ownProps;\n  const blogs = state.firestore.data.blogs;\n  const profiles = state.firestore.data.profiles;\n  const profile = profiles ? profiles[state.firebase.auth.uid] : null;\n  const allBlogs = [];\n  const currentUserBlogs = [];\n\n  if (blogs) {\n    for (const blogId in blogs) {\n      if (blogs[blogId].userId === state.firebase.auth.uid) {\n        currentUserBlogs.push(blogs[blogId]);\n      }\n\n      allBlogs.push(blogs[blogId]);\n    }\n  }\n\n  return {\n    currentUserBlogs,\n    allBlogs,\n    auth: state.firebase.auth,\n    userId,\n    profile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    approveBlog: blogData => dispatch(approveBlog(blogData)),\n    deleteBlogFromStorage: blogData => dispatch(deleteBlogFromStorage(blogData)),\n    deleteBlogFromDB: blogId => dispatch(deleteBlogFromDB(blogId))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: \"blogs\"\n}]))(ManageBlogs);","map":{"version":3,"sources":["/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/profile/ManageBlogs.jsx"],"names":["React","compose","connect","firestoreConnect","Button","ListGroup","BlogEditor","BlogBox","approveBlog","deleteBlogFromStorage","deleteBlogFromDB","ADMIN_ROLE","AUTHOR_ROLE","ManageBlogs","props","allBlogs","currentUserBlogs","profile","newBlog","setNewBlog","useState","closeBlogEditor","userType","map","blog","mapStateToProps","state","ownProps","userId","blogs","firestore","data","profiles","firebase","auth","uid","blogId","push","mapDispatchToProps","dispatch","blogData","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,WADF,EAEEC,qBAFF,EAGEC,gBAHF,QAIO,2BAJP;AAKA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,uCAAxC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA;AAA9B,MAA0CH,KAAhD;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBnB,KAAK,CAACoB,QAAN,CAAe,IAAf,CAA9B;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAGA,MAAIJ,QAAQ,IAAIE,OAAhB,EAAyB;AACvB,wBACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAACK,QAAR,KAAqBV,WAArB,iBACC,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MACPO,UAAU,eACR,oBAAC,UAAD;AACE,QAAA,eAAe,EAAEE,eADnB;AAEE,QAAA,OAAO,EAAEJ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAiBGC,OAjBH,EAkBGD,OAAO,CAACK,QAAR,KAAqBV,WAArB,IACC,CAACM,OADF,IAECF,gBAAgB,CAACO,GAAjB,CAAsBC,IAAD,IAAU;AAC7B,0BACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAEV,KAAK,CAACN,WADrB;AAEE,QAAA,IAAI,EAAEgB,IAFR;AAGE,QAAA,QAAQ,EAAEP,OAAO,CAACK,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD,KAVD,CApBJ,EA+BGL,OAAO,CAACK,QAAR,KAAqBX,UAArB,IACC,CAACO,OADF,IAECH,QAAQ,CAACQ,GAAT,CAAcC,IAAD,IAAU;AACrB,0BACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAEV,KAAK,CAACN,WADrB;AAEE,QAAA,qBAAqB,EAAEM,KAAK,CAACL,qBAF/B;AAGE,QAAA,gBAAgB,EAAEK,KAAK,CAACJ,gBAH1B;AAIE,QAAA,IAAI,EAAEc,IAJR;AAKE,QAAA,QAAQ,EAAEP,OAAO,CAACK,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD,KAZD,CAjCJ,CADF;AAiDD,GAlDD,MAkDO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,CA3DD;;AA4DA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,QAAnB;AACA,QAAME,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAgBC,IAAhB,CAAqBF,KAAnC;AACA,QAAMG,QAAQ,GAAGN,KAAK,CAACI,SAAN,CAAgBC,IAAhB,CAAqBC,QAAtC;AACA,QAAMf,OAAO,GAAGe,QAAQ,GAAGA,QAAQ,CAACN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBC,GAArB,CAAX,GAAuC,IAA/D;AACA,QAAMpB,QAAQ,GAAG,EAAjB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,MAAIa,KAAJ,EAAW;AACT,SAAK,MAAMO,MAAX,IAAqBP,KAArB,EAA4B;AAC1B,UAAIA,KAAK,CAACO,MAAD,CAAL,CAAcR,MAAd,KAAyBF,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBC,GAAjD,EAAsD;AACpDnB,QAAAA,gBAAgB,CAACqB,IAAjB,CAAsBR,KAAK,CAACO,MAAD,CAA3B;AACD;;AACDrB,MAAAA,QAAQ,CAACsB,IAAT,CAAcR,KAAK,CAACO,MAAD,CAAnB;AACD;AACF;;AACD,SAAO;AACLpB,IAAAA,gBADK;AAELD,IAAAA,QAFK;AAGLmB,IAAAA,IAAI,EAAER,KAAK,CAACO,QAAN,CAAeC,IAHhB;AAILN,IAAAA,MAJK;AAKLX,IAAAA;AALK,GAAP;AAOD,CAtBD;;AAuBA,MAAMqB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL/B,IAAAA,WAAW,EAAGgC,QAAD,IAAcD,QAAQ,CAAC/B,WAAW,CAACgC,QAAD,CAAZ,CAD9B;AAEL/B,IAAAA,qBAAqB,EAAG+B,QAAD,IACrBD,QAAQ,CAAC9B,qBAAqB,CAAC+B,QAAD,CAAtB,CAHL;AAIL9B,IAAAA,gBAAgB,EAAG0B,MAAD,IAAYG,QAAQ,CAAC7B,gBAAgB,CAAC0B,MAAD,CAAjB;AAJjC,GAAP;AAMD,CAPD;;AAQA,eAAenC,OAAO,CACpBC,OAAO,CAACuB,eAAD,EAAkBa,kBAAlB,CADa,EAEpBnC,gBAAgB,CAAC,CAAC;AAAEsC,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CAFI,CAAP,CAGb5B,WAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport BlogEditor from \"../BlogEditor/BlogEditor\";\nimport BlogBox from \"./BlogBox\";\nimport {\n  approveBlog,\n  deleteBlogFromStorage,\n  deleteBlogFromDB,\n} from \"../../actions/blogActions\";\nimport { ADMIN_ROLE, AUTHOR_ROLE } from \"../../components/common/roleConstants\";\n\nconst ManageBlogs = (props) => {\n  const { allBlogs, currentUserBlogs, profile } = props;\n  const [newBlog, setNewBlog] = React.useState(null);\n  const closeBlogEditor = () => {\n    setNewBlog(null);\n  };\n  if (allBlogs && profile) {\n    return (\n      <ListGroup defaultActiveKey=\"none\">\n        {profile.userType === AUTHOR_ROLE && (\n          <Button\n            variant=\"success\"\n            className=\"mb-5\"\n            onClick={() =>\n              setNewBlog(\n                <BlogEditor\n                  closeBlogEditor={closeBlogEditor}\n                  profile={profile}\n                />\n              )\n            }\n          >\n            Add a new blog\n          </Button>\n        )}\n        {newBlog}\n        {profile.userType === AUTHOR_ROLE &&\n          !newBlog &&\n          currentUserBlogs.map((blog) => {\n            return (\n              <ListGroup.Item>\n                <BlogBox\n                  approveBlog={props.approveBlog}\n                  blog={blog}\n                  userType={profile.userType}\n                />\n              </ListGroup.Item>\n            );\n          })}\n        {profile.userType === ADMIN_ROLE &&\n          !newBlog &&\n          allBlogs.map((blog) => {\n            return (\n              <ListGroup.Item>\n                <BlogBox\n                  approveBlog={props.approveBlog}\n                  deleteBlogFromStorage={props.deleteBlogFromStorage}\n                  deleteBlogFromDB={props.deleteBlogFromDB}\n                  blog={blog}\n                  userType={profile.userType}\n                />\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n    );\n  } else {\n    return <h4>Loading...</h4>;\n  }\n};\nconst mapStateToProps = (state, ownProps) => {\n  const { userId } = ownProps;\n  const blogs = state.firestore.data.blogs;\n  const profiles = state.firestore.data.profiles;\n  const profile = profiles ? profiles[state.firebase.auth.uid] : null;\n  const allBlogs = [];\n  const currentUserBlogs = [];\n  if (blogs) {\n    for (const blogId in blogs) {\n      if (blogs[blogId].userId === state.firebase.auth.uid) {\n        currentUserBlogs.push(blogs[blogId]);\n      }\n      allBlogs.push(blogs[blogId]);\n    }\n  }\n  return {\n    currentUserBlogs,\n    allBlogs,\n    auth: state.firebase.auth,\n    userId,\n    profile,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    approveBlog: (blogData) => dispatch(approveBlog(blogData)),\n    deleteBlogFromStorage: (blogData) =>\n      dispatch(deleteBlogFromStorage(blogData)),\n    deleteBlogFromDB: (blogId) => dispatch(deleteBlogFromDB(blogId)),\n  };\n};\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([{ collection: \"blogs\" }])\n)(ManageBlogs);\n"]},"metadata":{},"sourceType":"module"}