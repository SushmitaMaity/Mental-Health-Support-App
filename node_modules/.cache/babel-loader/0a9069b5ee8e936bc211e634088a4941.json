{"ast":null,"code":"var _jsxFileName = \"/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/auth/EmailPasswordSignIn.jsx\";\nimport React from \"react\";\nimport { Form, Button, Col, Container, Modal } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { signIn, resetPassword } from \"../../actions/authActions\";\n\nconst EmailPasswordSignIn = props => {\n  const {\n    t\n  } = useTranslation();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [confirmModalShow, setConfirmModalShow] = React.useState(false);\n  const [resetSuccessModalShow, setResetSuccessModalShow] = React.useState(false); // Sign in to an existing account with \"Email & Password\" method\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.signIn({\n      email,\n      password\n    });\n  };\n\n  const ConfirmModal = props => {\n    const [recoverEmail, setRecoverEmail] = React.useState(\"\");\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.resetPassword\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.enterEmail\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Email\",\n      onInput: e => {\n        setRecoverEmail(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.cancel\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        props.onHide();\n        props.resetPassword(recoverEmail);\n        setResetSuccessModalShow(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.resetButton\"))));\n  };\n\n  const SuccessModal = props => {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.resetPopup\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, authError && errKey === \"resetPassword\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errMsgContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, authError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, errMessage)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, t(\"signInForm.resetEmailSent\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, t(\"signInForm.success\"))));\n  }; // Redirect to home page after it's logged in\n\n\n  const {\n    auth,\n    authError,\n    errMessage,\n    errKey\n  } = props;\n\n  if (auth.uid) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, t(\"signInForm.formEmail\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    onInput: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, t(\"signInForm.formPassword\"), \" \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    onInput: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forgetPassword\",\n    onClick: () => setConfirmModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, t(\"signInForm.forgotPassword\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, t(\"signInForm.loginButton\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, authError && errKey === \"login\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsgContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, authError), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, errMessage)))), /*#__PURE__*/React.createElement(ConfirmModal, {\n    show: confirmModalShow,\n    onHide: () => setConfirmModalShow(false),\n    resetPassword: props.resetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SuccessModal, {\n    show: resetSuccessModalShow,\n    onHide: () => setResetSuccessModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds)),\n    resetPassword: recoverEmail => dispatch(resetPassword(recoverEmail))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailPasswordSignIn);","map":{"version":3,"sources":["/Users/sushmitamaity/Calmify/Mental-Health-Support-App/src/containers/auth/EmailPasswordSignIn.jsx"],"names":["React","Form","Button","Col","Container","Modal","Redirect","useTranslation","connect","signIn","resetPassword","EmailPasswordSignIn","props","t","email","setEmail","useState","password","setPassword","confirmModalShow","setConfirmModalShow","resetSuccessModalShow","setResetSuccessModalShow","handleSubmit","e","preventDefault","ConfirmModal","recoverEmail","setRecoverEmail","target","value","onHide","SuccessModal","authError","errKey","errMessage","auth","uid","mapStateToProps","state","firebase","mapDispatchToProps","dispatch","creds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Col, Container, Modal } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { signIn, resetPassword } from \"../../actions/authActions\";\n\nconst EmailPasswordSignIn = (props) => {\n  const { t } = useTranslation();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [confirmModalShow, setConfirmModalShow] = React.useState(false);\n  const [resetSuccessModalShow, setResetSuccessModalShow] = React.useState(\n    false\n  );\n\n  // Sign in to an existing account with \"Email & Password\" method\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signIn({ email, password });\n  };\n\n  const ConfirmModal = (props) => {\n    const [recoverEmail, setRecoverEmail] = React.useState(\"\");\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {t(\"signInForm.resetPassword\")}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6>{t(\"signInForm.enterEmail\")}</h6>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Email\"\n            onInput={(e) => {\n              setRecoverEmail(e.target.value);\n            }}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={props.onHide}>\n            {t(\"signInForm.cancel\")}\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              props.onHide();\n              props.resetPassword(recoverEmail);\n              setResetSuccessModalShow(true);\n            }}\n          >\n            {t(\"signInForm.resetButton\")}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const SuccessModal = (props) => {\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {t(\"signInForm.resetPopup\")}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {authError && errKey === \"resetPassword\" ? (\n            <div className=\"errMsgContainer\">\n              <b>{authError}</b>\n              <div className=\"errMsg\">{errMessage}</div>\n            </div>\n          ) : (\n            <p>{t(\"signInForm.resetEmailSent\")}</p>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"success\" onClick={props.onHide}>\n            {t(\"signInForm.success\")}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  // Redirect to home page after it's logged in\n  const { auth, authError, errMessage, errKey } = props;\n  if (auth.uid) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Container>\n      <Form>\n        <Form.Group as={Col} controlId=\"email\">\n          <Form.Label>{t(\"signInForm.formEmail\")}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onInput={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"password\">\n          <Form.Label>{t(\"signInForm.formPassword\")} </Form.Label>\n          <Form.Control\n            type=\"password\"\n            onInput={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <div\n          className=\"forgetPassword\"\n          onClick={() => setConfirmModalShow(true)}\n        >\n          {t(\"signInForm.forgotPassword\")}\n        </div>\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          {t(\"signInForm.loginButton\")}\n        </Button>\n        <Container>\n          {/* Show error message when fails to sign in */}\n          {authError && errKey === \"login\" && (\n            <div className=\"errMsgContainer\">\n              <b>{authError}</b>\n              <div className=\"errMsg\">{errMessage}</div>\n            </div>\n          )}\n        </Container>\n      </Form>\n\n      <ConfirmModal\n        show={confirmModalShow}\n        onHide={() => setConfirmModalShow(false)}\n        resetPassword={props.resetPassword}\n      />\n      <SuccessModal\n        show={resetSuccessModalShow}\n        onHide={() => setResetSuccessModalShow(false)}\n      />\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    errMessage: state.auth.errMessage,\n    errKey: state.auth.errKey,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n    resetPassword: (recoverEmail) => dispatch(resetPassword(recoverEmail)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmailPasswordSignIn);\n"]},"metadata":{},"sourceType":"module"}